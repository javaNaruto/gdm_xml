<?xml version="1.0" encoding="GB2312" ?>
<!--
	修改记录列表
	序号		修改类型		修改内容		修改人		修改日期
	1		创建			创建文件		肖敏		2011-8-30
	2		修改			merge不支持子查询      章翊            2011-10-27
						merge支持delete分支						
-->
<!--
	测试点列表
	普通表的merge into 相关操作
	测试点1：
	1.省略UPDATE或INSERT子句
	2.带条件的Updates和Insert子句
	3.无条件的Insert
	4.数据源为子查询
	5.数据源为视图
	6.增加DELETE子句
	
	测试点2：
	7.验证UPDATE子句不能更新在ON连接条件中出现的列
	8.验证若匹配到，源表中匹配行必须唯一
	9.验证Insert不能包含目标表中的列
	10.验证insert的where条件只能包含源表列
	11.验证操作源表和目标表必须具有相应的权限		
-->
<SQLTEST>
	<CONTENT>  </CONTENT><!-- 请在这里加入对脚本的简要描述 -->
	<CONNECT></CONNECT><!-- 连接数据库 -->
	<TestPointBegin> 测试点1：开始 </TestPointBegin>
	<SQL_CASE>
	    <TYPE> DIRECT_EXECUTE_IGNORE </TYPE><!-- 不关心语句执行的结果 -->
	    <SQL> DROP TABLE T1_MERGE_TABLE_01 CASCADE; </SQL>
	    <SQL> DROP TABLE T1_MERGE_TABLE_02 CASCADE; </SQL>
	    <SQL> DROP TABLE T1_MERGE_TABLE_03 CASCADE; </SQL>
	    <SQL> DROP TABLE T1_MERGE_TABLE_04 CASCADE; </SQL>
	    <SQL> DROP TABLE T1_MERGE_TABLE_05 CASCADE; </SQL>
	    <SQL> DROP TABLE T1_MERGE_TABLE_06 CASCADE; </SQL>
	    <SQL> DROP USER U1_MERGE_INTO CASCADE; </SQL>
	    <SQL> commit; </SQL>
	    
	    

	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> CREATE TABLE T1_MERGE_TABLE_01(C1 INT,C2 VARCHAR,C3 VARCHAR); </SQL><!-- 目标表 -->
	    <SQL> INSERT INTO T1_MERGE_TABLE_01 VALUES(1501, &apos;VIVITAR 35MM&apos;, &apos;ELECTRNCS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_01 VALUES(1502, &apos;OLYMPUS IS50&apos;, &apos;ELECTRNCS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_01 VALUES(1600, &apos;PLAY GYM&apos;, &apos;TOYS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_01 VALUES(1601, &apos;LAMAZE&apos;, &apos;TOYS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_01 VALUES(1666, &apos;HARRY POTTER&apos;, &apos;DVD&apos;); </SQL>
	    
	    <SQL> CREATE TABLE T1_MERGE_TABLE_02(C1 INT,C2 VARCHAR,C3 VARCHAR); </SQL><!-- 源表 -->
	    <SQL> INSERT INTO T1_MERGE_TABLE_02 VALUES(1502, &apos;OLYMPUS CAMERA&apos;, &apos;ELECTRNCS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_02 VALUES(1601, &apos;LAMAZE&apos;, &apos;TOYS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_02 VALUES(1666, &apos;HARRY POTTER&apos;, &apos;TOYS&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_02 VALUES(1700, &apos;WAIT INTERFACE&apos;, &apos;BOOKS&apos;); </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_01.C3=T1_MERGE_TABLE_02.C3;
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN> <COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	     <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_02.C3);
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN><COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1700</COLUMN><COLUMN>WAIT INTERFACE</COLUMN><COLUMN>BOOKS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=T1_MERGE_TABLE_02.C2
	          WHERE T1_MERGE_TABLE_01.C3=T1_MERGE_TABLE_02.C3;
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN> <COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_01.C3=T1_MERGE_TABLE_02.C3
	          WHERE T1_MERGE_TABLE_02.C3='DVD'
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_02.C3)
	          WHERE T1_MERGE_TABLE_02.C3!='BOOKS';
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	     <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN> <COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(1=null)
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_02.C3)
	          WHERE T1_MERGE_TABLE_02.C3='BOOKS';
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN><COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1700</COLUMN><COLUMN>WAIT INTERFACE</COLUMN><COLUMN>BOOKS</COLUMN>
	    	</RECORD>
	    </RESULT>
	     
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING (SELECT C1,C2 FROM T1_MERGE_TABLE_02)
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=T1_MERGE_TABLE_02.C2
	          WHEN NOT MATCHED THEN 
	          INSERT(C1,C2) VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2);
	    </SQL>
	  	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> CREATE OR REPLACE VIEW V1_MERGE_INTO_01 AS SELECT C1,C2,C3 FROM T1_MERGE_TABLE_02; </SQL>
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING V1_MERGE_INTO_01
	          ON(T1_MERGE_TABLE_01.C1=V1_MERGE_INTO_01.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=V1_MERGE_INTO_01.C2,T1_MERGE_TABLE_01.C3=V1_MERGE_INTO_01.C3
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES(V1_MERGE_INTO_01.C1,V1_MERGE_INTO_01.C2,V1_MERGE_INTO_01.C3);
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
             <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1502</COLUMN><COLUMN>OLYMPUS CAMERA</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN><COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1700</COLUMN><COLUMN>WAIT INTERFACE</COLUMN><COLUMN>BOOKS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_01 
	          USING T1_MERGE_TABLE_02
	          ON(T1_MERGE_TABLE_01.C1=T1_MERGE_TABLE_02.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_01.C2=T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_01.C3=T1_MERGE_TABLE_02.C3
	          DELETE WHERE (T1_MERGE_TABLE_02.C3='ELECTRNCS')
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_02.C3);
	    </SQL>
	    <TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
	    <SQL> SELECT * FROM T1_MERGE_TABLE_01; </SQL>
	    <RESULT>
	    	<RECORD>
	    		<COLUMN>1501</COLUMN><COLUMN>VIVITAR 35MM</COLUMN><COLUMN>ELECTRNCS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1600</COLUMN><COLUMN>PLAY GYM</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1601</COLUMN><COLUMN>LAMAZE</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1666</COLUMN><COLUMN>HARRY POTTER</COLUMN><COLUMN>TOYS</COLUMN>
	    	</RECORD>
	    	<RECORD>
	    		<COLUMN>1700</COLUMN><COLUMN>WAIT INTERFACE</COLUMN><COLUMN>BOOKS</COLUMN>
	    	</RECORD>
	    </RESULT>
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> ROLLBACK; </SQL>
	    
	</SQL_CASE>
	<TestPointBegin> 测试点2：开始 </TestPointBegin>
       <SQL_CASE>	     
	     <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	     <SQL> CREATE TABLE T1_MERGE_TABLE_03(C1 INT,C2 VARCHAR);  </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_03 VALUES(1,&apos;AAA&apos;); </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_03 VALUES(2,&apos;BBB&apos;); </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_03 VALUES(2,&apos;CCC&apos;); </SQL>
	     
	     <SQL> CREATE TABLE T1_MERGE_TABLE_04(C1 INT,C2 VARCHAR); </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_04 VALUES(2,&apos;AAA&apos;); </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_04 VALUES(2,&apos;BBB&apos;); </SQL>
	     <SQL> INSERT INTO T1_MERGE_TABLE_04 VALUES(3,&apos;DDD&apos;); </SQL>
	     	     
	     <TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
	      <SQL> MERGE INTO T1_MERGE_TABLE_03 
	            USING T1_MERGE_TABLE_04
	            ON(T1_MERGE_TABLE_03.C2=T1_MERGE_TABLE_04.C2)
	            WHEN MATCHED THEN 
	            UPDATE SET T1_MERGE_TABLE_03.C1=T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_04.C2=0;
	    </SQL><!-- 验证UPDATE子句不能更新在ON连接条件中出现的列 -->
	    <SQL>   MERGE INTO T1_MERGE_TABLE_03 
	            USING T1_MERGE_TABLE_04
	            ON(T1_MERGE_TABLE_03.C1=T1_MERGE_TABLE_04.C1)
	            WHEN MATCHED THEN 
	            UPDATE SET T1_MERGE_TABLE_03.C2=T1_MERGE_TABLE_02.C2;
	    </SQL><!-- 验证若匹配到，源表中匹配行必须唯一 -->
	    <SQL>   MERGE INTO T1_MERGE_TABLE_03 
	            USING T1_MERGE_TABLE_04
	            ON(T1_MERGE_TABLE_03.C2=T1_MERGE_TABLE_04.C2)
	            WHEN NOT MATCHED THEN 
	            INSERT VALUES( T1_MERGE_TABLE_03.C1,T1_MERGE_TABLE_04.C2);
	    </SQL><!-- .验证Insert不能包含目标表中的列 -->
	     <SQL> MERGE INTO T1_MERGE_TABLE_03 
	           USING T1_MERGE_TABLE_04
	           ON(T1_MERGE_TABLE_03.C2=T1_MERGE_TABLE_04.C2)
	           WHEN NOT MATCHED THEN 
	           INSERT VALUES( T1_MERGE_TABLE_02.C1,T1_MERGE_TABLE_02.C2,T1_MERGE_TABLE_02.C3)
	           WHERE T1_MERGE_TABLE_03.C1=3;
	    </SQL><!-- 验证insert的where条件只能包含源表列 -->
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> CREATE USER U1_MERGE_INTO IDENTIFIED BY U1_MERGE_INTO; </SQL>
	    <SQL> GRANT CREATE TABLE TO U1_MERGE_INTO; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_IGNORE </TYPE><!-- 不关心语句执行的结果 -->
	    <SQL> DROP TABLE T1_MERGE_TABLE_05 CASCADE; </SQL>
	    
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> CREATE TABLE T1_MERGE_TABLE_05(C1 INT,C2 VARCHAR);  </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_05 VALUES(1,&apos;AAA&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_05 VALUES(2,&apos;BBB&apos;); </SQL>

	    <!-- 新用户登陆 -->
	    <UID> U1_MERGE_INTO </UID>
	    <PWD> U1_MERGE_INTO </PWD>
	    <CONNECT> </CONNECT>
	    <TYPE> DIRECT_EXECUTE_IGNORE </TYPE><!-- 不关心语句执行的结果 -->
	    <SQL> DROP TABLE T1_MERGE_TABLE_06 CASCADE; </SQL>
	    <TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
	    <SQL> CREATE TABLE T1_MERGE_TABLE_06(C1 INT,C2 VARCHAR);  </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_06 VALUES(2,&apos;CCC&apos;); </SQL>
	    <SQL> INSERT INTO T1_MERGE_TABLE_06 VALUES(3,&apos;BBB&apos;); </SQL>
	    <TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
	    <SQL> MERGE INTO T1_MERGE_TABLE_05 
	          USING T1_MERGE_TABLE_06
	          ON(T1_MERGE_TABLE_05.C1=T1_MERGE_TABLE_06.C1)
	          WHEN MATCHED THEN 
	          UPDATE SET T1_MERGE_TABLE_05.C2=T1_MERGE_TABLE_06.C2
	          WHEN NOT MATCHED THEN 
	          INSERT VALUES( T1_MERGE_TABLE_06.C1,T1_MERGE_TABLE_06.C2);
	    </SQL><!-- 验证操作源表和目标表必须具有相应的权限 -->
	</SQL_CASE>
	
	<CLEAR><!-- 脚本清除模块，该关键字标识清除块开始 -->
		<SQL_CASE>
			<TYPE> DIRECT_EXECUTE_IGNORE </TYPE><!-- 不关心语句执行的结果 -->
			<SQL> DROP TABLE T1_MERGE_TABLE_01 CASCADE; </SQL>
	                <SQL> DROP TABLE T1_MERGE_TABLE_02 CASCADE; </SQL>
	                <SQL> DROP TABLE T1_MERGE_TABLE_03 CASCADE; </SQL>
	                <SQL> DROP TABLE T1_MERGE_TABLE_04 CASCADE; </SQL>
	                <SQL> DROP TABLE T1_MERGE_TABLE_05 CASCADE; </SQL>
	                <SQL> DROP TABLE T1_MERGE_TABLE_06 CASCADE; </SQL>
	                <SQL> DROP USER U1_MERGE_INTO CASCADE; </SQL>

		</SQL_CASE>
	</CLEAR>
</SQLTEST> 