<?xml version="1.0" encoding="GB2312" ?>
<!--
	修改记录列表
	序号		修改类型		修改内容		修改人		修改日期
	1		创建			创建文件		余俊美		2010-10-18																
-->
<!--
	测试点列表
	1.DM要求一个连接中只有一个表的 IDENTITY_INSERT 属性可以设置为 ON。当一个表的IDENTITY_INSERT 属性被设置为ON时，该表中的自动增量列的值由用户指定。如果插
入值大于表的当前标识值(自增列当前值)，则DM自动将新插入值作为当前标识值使用，即改变该表的自增列当前值；否则，将不影响该自增列当前值		
-->
<SQLTEST>
	<CONTENT>  </CONTENT><!-- 请在这里加入对脚本的简要描述 -->
	<CONNECT></CONNECT><!-- 连接数据库 -->
	<TestPointBegin> 测试点1：开始 </TestPointBegin>
	<SQL_CASE>
		<TYPE> DIRECT_EXECUTE_IGNORE </TYPE><!-- 不关心语句执行的结果 -->
		<SQL> DROP TABLE T1_IDENTITY0005 CASCADE; </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> CREATE TABLE T1_IDENTITY0005(C1 INT IDENTITY(1,1),C2 INT); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> INSERT INTO T1_IDENTITY0005(C2) VALUES(1); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> SET IDENTITY_INSERT T1_IDENTITY0005 ON; </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> INSERT INTO T1_IDENTITY0005(C1,C2) VALUES(1,2); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
		<SQL> SELECT * FROM T1_IDENTITY0005; </SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>1</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>2</COLUMN>
			</RECORD>
		</RESULT>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> SET IDENTITY_INSERT T1_IDENTITY0005 OFF; </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> INSERT INTO T1_IDENTITY0005(C2) VALUES(3); </SQL>
		<SQL> INSERT INTO T1_IDENTITY0005(C2) VALUES(4); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
		<SQL> SELECT * FROM T1_IDENTITY0005; </SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>1</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>2</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>2</COLUMN><COLUMN>3</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>3</COLUMN><COLUMN>4</COLUMN>
			</RECORD>
		</RESULT>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> SET IDENTITY_INSERT T1_IDENTITY0005 ON; </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> INSERT INTO T1_IDENTITY0005(C1,C2) VALUES(8,2); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> SET IDENTITY_INSERT T1_IDENTITY0005 OFF; </SQL>
		
		<TYPE> DIRECT_EXECUTE_SUCCESS </TYPE><!-- 预期执行成功 -->
		<SQL> INSERT INTO T1_IDENTITY0005(C2) VALUES(3); </SQL>
		<SQL> INSERT INTO T1_IDENTITY0005(C2) VALUES(4); </SQL>
		
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT_FULL </TYPE><!-- 预期执行成功，并返回一个结果集，验证全字匹配长度 -->
		<SQL> SELECT * FROM T1_IDENTITY0005; </SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>1</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>1</COLUMN><COLUMN>2</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>2</COLUMN><COLUMN>3</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>3</COLUMN><COLUMN>4</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>8</COLUMN><COLUMN>2</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>9</COLUMN><COLUMN>3</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>10</COLUMN><COLUMN>4</COLUMN>
			</RECORD>
		</RESULT>
	</SQL_CASE>
	<CLEAR><!-- 脚本清除模块，该关键字标识清除块开始 -->
		<SQL_CASE>
			<SQL> DROP TABLE T1_IDENTITY0005 CASCADE; </SQL>
		</SQL_CASE>
	</CLEAR>
</SQLTEST> 
