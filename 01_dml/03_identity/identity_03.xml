<?xml version="1.0" encoding="GB2312" ?>
<!--
	修改记录列表
	序号		修改类型		修改内容		修改人		修改日期
	 1		创建	     	创建文件,并完成测试点							
	 2		补充		添加测试点8，并完成		冯  源		2005-7-20					
-->
<!--
	测试点列表
	1.自增列适用的数据类型
	2.种子的检验
	3.增量的检验
	4.种子和增量必须同时指定，两者都不指定时取默认值(1,1)
	5.不能对标志列使用DEFAULT
	6.自增列查询函数:IDENT_SEED,IDENT_INCR	
	7.SET IDENTITY_INSERT 属性
	8.自增列一经插入，无法修改
-->
<SQLTEST>
	<CONTENT>自增列的使用</CONTENT><!-- 请在这里加入对脚本的简要描述 -->
	<CONNECT>0</CONNECT><!-- 连接数据库 -->
	<TestPointBegin>测试点1：自增列适用的数据类型 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T01_DDL_00360(C1 INT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T03_DDL_00360(C1 BIGINT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>CREATE TABLE T05_DDL_00360(C1 CHAR(10) IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T06_DDL_00360(C1 FLOAT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T07_DDL_00360(C1 CLOB IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T08_DDL_00360(C1 INTERVAL DAY TO SECOND IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T09_DDL_00360(C1 DECIMAL(10,4) IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T02_DDL_00360(C1 SMALLINT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T04_DDL_00360(C1 DECIMAL(10,0) IDENTITY(1,10),C2 CHAR(10));</SQL>
	</SQL_CASE>
	

	<TestPointBegin>测试点2：种子的检验 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T10_DDL_00360(C1 INT IDENTITY(-2147483648,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T11_DDL_00360(C1 INT IDENTITY(2147483647,10),C2 CHAR(10));</SQL>
		
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>CREATE TABLE T16_DDL_00360(C1 INT IDENTITY(-2147483649,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T17_DDL_00360(C1 INT IDENTITY(2147483648,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T18_DDL_00360(C1 SMALLINT IDENTITY(-32769,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T19_DDL_00360(C1 SMALLINT IDENTITY(32768,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T20_DDL_00360(C1 DECIMAL(4,0) IDENTITY(-10000,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T21_DDL_00360(C1 DECIMAL(4,0) IDENTITY(10000,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T12_DDL_00360(C1 SMALLINT IDENTITY(-32768,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T13_DDL_00360(C1 SMALLINT IDENTITY(32767,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T14_DDL_00360(C1 DECIMAL(4,0) IDENTITY(-9999,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T15_DDL_00360(C1 DECIMAL(4,0) IDENTITY(9999,10),C2 CHAR(10));</SQL>
		
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- DM7只支持整数 -->
		<SQL>CREATE TABLE T22_DDL_00360(C1 INT IDENTITY(12.4,10.5),C2 CHAR(10));</SQL>
	</SQL_CASE>
	

	<TestPointBegin>测试点3：增量的检验 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T23_DDL_00360(C1 INT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T24_DDL_00360(C1 INT IDENTITY(1,-10),C2 CHAR(10));</SQL>
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>CREATE TABLE T25_DDL_00360(C1 INT IDENTITY(1,0),C2 CHAR(10));</SQL>
	</SQL_CASE>
	

	<TestPointBegin>测试点4：种子和增量必须同时指定，两者都不指定时取默认值(1,1) 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T26_DDL_00360(C1 INT IDENTITY,C2 CHAR(10));</SQL>
		<SQL>INSERT INTO T26_DDL_00360(C2) VALUES(&apos;OK&apos;);</SQL>
		<SQL>INSERT INTO T26_DDL_00360(C2) VALUES(&apos;HELLO&apos;);</SQL>
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT </TYPE><!-- 预期执行成功，并返回一个结果集，只验证给定值的长度 -->
		<SQL>SELECT C1 FROM T26_DDL_00360;</SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>2</COLUMN>
			</RECORD>
		</RESULT>
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>CREATE TABLE T27_DDL_00360(C1 INT IDENTITY(1),C2 CHAR(10));</SQL>
		<SQL>CREATE TABLE T28_DDL_00360(C1 INT IDENTITY(,3),C2 CHAR(10));</SQL>
	</SQL_CASE>
	

	<TestPointBegin>测试点5：不能对标志列使用DEFAULT 开始 </TestPointBegin>
	<SQL_CASE>
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>CREATE TABLE T29_DDL_00360(C1 INT IDENTITY(1,3) DEFAULT 24,C2 CHAR(10));</SQL>
	</SQL_CASE>
	

	<TestPointBegin>测试点6：自增列查询函数:IDENT_SEED,IDENT_INCR  开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T30_DDL_00360(C1 INT IDENTITY(1,10),C2 CHAR(10));</SQL>
		<SQL>INSERT INTO T30_DDL_00360(C2) VALUES(&apos;OK&apos;);</SQL>
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT </TYPE><!-- 预期执行成功，并返回一个结果集，只验证给定值的长度 -->
		<SQL>SELECT IDENT_SEED (&apos;T30_DDL_00360&apos;) FROM T30_DDL_00360;</SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN>
			</RECORD>
		</RESULT>
		<SQL>SELECT IDENT_INCR(&apos;T30_DDL_00360&apos;) FROM T30_DDL_00360;</SQL>
		<RESULT>
			<RECORD>
				<COLUMN>10</COLUMN>
			</RECORD>
		</RESULT>
	</SQL_CASE>
	

	<TestPointBegin>测试点7：SET IDENTITY_INSERT 属性 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T31_DDL_00360(C1 INT IDENTITY(1,1),C2 FLOAT);</SQL>
		<SQL>INSERT INTO T31_DDL_00360(C2) VALUES(12.1)</SQL>
		<SQL>INSERT INTO T31_DDL_00360(C2) VALUES(13.2)</SQL>
		<SQL>SET IDENTITY_INSERT T31_DDL_00360 ON;</SQL>
		<SQL>INSERT INTO T31_DDL_00360(C1,C2) VALUES(5,10.1)</SQL>
		<SQL>INSERT INTO T31_DDL_00360(C1,C2) VALUES(7,11.1)</SQL>
		<SQL>SET IDENTITY_INSERT T31_DDL_00360 OFF;</SQL>
		<SQL>INSERT INTO T31_DDL_00360(C2) VALUES(15.2)</SQL>
		<TYPE> DIRECT_EXECUTE_SELECT_COMPARE_RESULT </TYPE><!-- 预期执行成功，并返回一个结果集，只验证给定值的长度 -->
		<SQL>SELECT C1 FROM T31_DDL_00360;</SQL>
		<RESULT>
			<RECORD>
				<COLUMN>1</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>2</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>5</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>7</COLUMN>
			</RECORD>
			<RECORD>
				<COLUMN>8</COLUMN>
			</RECORD>
		</RESULT>
	</SQL_CASE>
	

	<TestPointBegin>测试点8：自增列一经插入无法修改 开始 </TestPointBegin>
	<SQL_CASE>
		<SQL>CREATE TABLE T32_DDL_00360(C1 INT IDENTITY(1,1),C2 INT);</SQL>
		<SQL>INSERT INTO T32_DDL_00360(C2) VALUES(11)</SQL>
		<SQL>INSERT INTO T32_DDL_00360(C2) VALUES(21)</SQL>
		<SQL>INSERT INTO T32_DDL_00360(C2) VALUES(31)</SQL>
		<TYPE> DIRECT_EXECUTE_FAIL </TYPE><!-- 预期执行失败 -->
		<SQL>UPDATE T32_DDL_00360 SET C1=7 WHERE C2=11</SQL>
	</SQL_CASE>
	

	<CLEAR><!-- 脚本清除模块，该关键字标识清除块开始 -->
		<SQL_CASE>
			<SQL>DROP TABLE T01_DDL_00360;</SQL>
			<SQL>DROP TABLE T02_DDL_00360;</SQL>
			<SQL>DROP TABLE T03_DDL_00360;</SQL>
			<SQL>DROP TABLE T04_DDL_00360;</SQL>
			<SQL>DROP TABLE T10_DDL_00360;</SQL>
			<SQL>DROP TABLE T11_DDL_00360;</SQL>
			<SQL>DROP TABLE T12_DDL_00360;</SQL>
			<SQL>DROP TABLE T13_DDL_00360;</SQL>
			<SQL>DROP TABLE T14_DDL_00360;</SQL>
			<SQL>DROP TABLE T15_DDL_00360;</SQL>
			<SQL>DROP TABLE T22_DDL_00360;</SQL>
			<SQL>DROP TABLE T23_DDL_00360;</SQL>
			<SQL>DROP TABLE T24_DDL_00360;</SQL>
			<SQL>DROP TABLE T26_DDL_00360;</SQL>
			<SQL>DROP TABLE T30_DDL_00360;</SQL>
			<SQL>DROP TABLE T31_DDL_00360;</SQL>
			<SQL>DROP TABLE T32_DDL_00360;</SQL>
		</SQL_CASE>
	</CLEAR>
</SQLTEST> 